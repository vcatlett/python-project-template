# Import external packages
import os
import sys
from configparser import SafeConfigParser

# Import your code
import PythonProject
from PythonProject import __version__

# Load paths
PATH_ROOT = os.path.abspath(os.path.join(os.getcwd(), os.pardir, os.pardir))
PATH_CONFIG = os.path.join(PATH_ROOT, "config.ini")
PATH_DOCS_ROOT = os.path.join(PATH_ROOT, "docs")
PATH_DOCS_STATIC = os.path.join(PATH_DOCS_ROOT, "_static")
PATH_DOCS_TEMPLATES = os.path.join(PATH_DOCS_ROOT, "_templates")

URL_GITHUB = "https://github.com/vcatlett/python-project-template"

# Load the config file
config = SafeConfigParser()
config.read(PATH_CONFIG)

# Project information
project = config.get('Project', 'title_full')
copyright = f"{config.get('Program', 'year')}, {config.get('Program', 'site')}"
author = config.get('Student', 'name')

# The short X.Y version
version = __version__


# General Configuration
extensions = [
    #"myst_parser",
    "myst_nb",
    "sphinx.ext.autodoc",
    "sphinx.ext.doctest",
    "sphinx.ext.graphviz",
    "sphinx.ext.autosectionlabel",
    "sphinx.ext.intersphinx",
    "sphinx.ext.todo",
    "sphinx.ext.coverage",
    "sphinx.ext.mathjax",
    "sphinx.ext.ifconfig",
    "sphinx.ext.viewcode",
    "sphinxcontrib.mermaid",
    "numpydoc",
    "sphinx_thebe"
]

numpydoc_show_class_members = True
autosummary_generate = True

autodoc_docstring_signature = True
autodoc_default_options = {"members": None, "undoc-members": None}

# Make sure the targets are unique
autosectionlabel_prefix_document = True

# Mermaid configuration
mermaid_init_js = "mermaid.initialize({startOnLoad:true, useMaxWidth:false});"
mermaid_verbose = True

# Path(s) to templates, relative to this directory
templates_path = [PATH_DOCS_TEMPLATES]

# Suffix(es) of source filenames
source_suffix = {
   '.rst': 'restructuredtext',
   '.txt': 'markdown',
   '.md': 'markdown',
}

# The master toctree document
master_doc = "index"

# The language for content autogenerated by Sphinx
language = "en"

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
# This pattern also affects html_static_path and html_extra_path .
exclude_patterns = ['_build', 'Thumbs.db', '.DS_Store']

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = "sphinx"


# -- Options for HTML output -------------------------------------------------

# The theme to use for HTML and HTML Help pages
html_title = config.get('Project', 'title_full')
html_theme = "sphinx_book_theme"
html_theme_options = {
    "repository_url": URL_GITHUB,
    "use_repository_button": True,
}
html_static_path = [PATH_DOCS_STATIC]
html_logo = os.path.join(PATH_DOCS_STATIC, "icon/logo.png")
htmlhelp_basename = "PythonProjectDoc"


# -- Options for LaTeX output ------------------------------------------------

latex_elements = {
    # The paper size ('letterpaper' or 'a4paper').
    #
    # 'papersize': 'letterpaper',
    # The font size ('10pt', '11pt' or '12pt').
    #
    # 'pointsize': '10pt',
    # Additional stuff for the LaTeX preamble.
    #
    # 'preamble': '',
    # Latex figure (float) alignment
    #
    # 'figure_align': 'htbp',
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
    (
        master_doc,
        "python_project.tex",
        "python_project Documentation",
        ["Victoria Catlett"],
        "manual",
    )
]


# -- Options for manual page output ------------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [(master_doc, "python_project", "Python Project Documentation", [author], 1)]


# -- Options for Texinfo output ----------------------------------------------

texinfo_documents = [
    (
        master_doc,
        "Python Project",
        "Python Project Documentation",
        author,
        "Python Project",
        "A template Python project.",
        "Miscellaneous",
    )
]

default_role = "obj"

# -- Extension configuration -------------------------------------------------
numpydoc_class_members_toctree = False

intersphinx_mapping = {
    "python": ("https://docs.python.org/3/", None),
    "numpy": ("https://numpy.org/doc/stable/", None),
    "scipy": ("https://docs.scipy.org/doc/scipy/", None),
    "astropy": ("https://docs.astropy.org/en/stable/", None),
    "matplotib": ("https://matplotlib.org/stable", None),
    "pandas": ("https://pandas.pydata.org/docs/", None),
    "specutils": ("https://specutils.readthedocs.io/en/stable/", None),
}

# Thebe
thebe_config = {
    "always_load": True,
    "selector": "div.highlight",
}

# MyST
myst_enable_extensions = [
    "amsmath",
    "colon_fence",
    "deflist",
    "dollarmath",
    "html_image",
]
myst_url_schemes = ("http", "https", "mailto")